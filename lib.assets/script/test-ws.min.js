function PlanetChat(n,o){this.settings={reconnectTimeout:1e3},o=o||{};for(let n in o)o.hasOwnProperty(n)&&t.settings.hasOwnProperty(n)&&(settings[n]=o[n]);this.conn=null,this.websocketURL=n,this.connected=!1,this.firstConnect=!0,this.toObject=null,this.init=function(){this.connect()},this.connect=function(n){n||(n=t.websocketURL);try{console.log("before connect "+n),this.conn=new WebSocket(n),console.log("after connect "+n),this.conn.opopen=function(n){console.log("Connected"),t.connected=!0,t.firstConnect=!1,clearTimeout(t.toObject),t.firstConnect?t.onFirstConnect(n):(t.onReconnect(n),t.onReconnect=function(n){}),t.onOpen(e)},this.conn.operror=function(n){console.log("operror"),t.connected=!1,t.firstConnect=!1,t.onError(n),clearTimeout(t.toObj),t.toObj=setTimeout(function(){t.connect()},t.settings.reconnectTimeout)},this.conn.onclose=function(n){console.log("onclose"),t.connected=!1,t.firstConnect=!1,t.onClose(n),clearTimeout(t.toObj),t.toObj=setTimeout(function(){t.connect()},t.settings.reconnectTimeout)},this.conn.onmessage=function(n){console.log("onmessage"),console.log("receive",n.data),t.connected=!0,t.onMessage(n)}}catch(n){console.error(n)}},this.onFirstConnect=function(n){},this.onReconnect=function(n){},this.onOpen=function(n){},this.onError=function(n){},this.onClose=function(n){},this.onMessage=function(n){},this.send=function(n){try{this.connected?this.conn.send(n):(this.onReconnect=function(o){this.conn.send(n)},this.connect())}catch(o){this.onReconnect=function(o){this.conn.send(n)},this.connect()}},this.onBeforeSendMessage=function(){},this.onSendMessage=function(){},this.onAfterSendMessage=function(){};let t=this;this.init()}